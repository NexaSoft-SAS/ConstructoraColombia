---
import Action from "@/components/Action.astro"
import ForecastProject from "@/components/ForecastProject.astro"
import Velocimetro from "@/components/Velocimetro.astro"
import { type Project } from "@/consts/projects"

export interface ProjectWithForecast extends Project {
	forecast: number
}
interface Props {
	count: number
	combatNumber: string
	projects: ProjectWithForecast[]
}

const { count, projects } = Astro.props
---

<section class="forecastGrid mt-40 grid items-center gap-4 px-7">
	<ForecastProject
		image={`/img/projects/${projects[0].id}-big.png`}
		imageAlt={`${projects[0].name}`}
		boxerName={projects[0].name}
		percentage={projects[0].forecast * 100}
		class:list={["boxer1"]}
	/>
	<div class="pronostico flex flex-col items-center justify-center gap-4">
		<h2 class="text-2xl font-medium uppercase text-white">Unidades disponibles</h2>
		<p class="max-w-72 text-center text-xl text-primary">
			Número de unidades disponibles de {count} construidas
		</p>
		<Velocimetro percentage={projects[1].forecast * 100} />
	</div>
	<ForecastProject
		image={`/img/projects/${projects[1].id}-big.png`}
		imageAlt={`${projects[1].name}`}
		boxerName={projects[1].name}
		percentage={projects[1].forecast * 100}
		class:list={["boxer1"]}
	/>
	<div class="action flex w-full flex-col items-center justify-center">
		<Action
			class="mt-20 w-full max-w-lg text-base uppercase"
			as="button"
			id="add-to-calendar"
			aria-disabled="true"
			aria-label="próximamente"
		>
			Solicitar Información
		</Action>
	</div>
</section>

<style>
	.forecastGrid {
		grid-template-areas: "prono prono" "boxer1 boxer2" "action action";
		column-gap: 2rem;
		.pronostico {
			grid-area: prono;
		}
		.boxer1 {
			grid-area: boxer1;
		}
		.boxer2 {
			grid-area: boxer2;
		}
		.action {
			grid-area: action;
		}
	}

	@media (min-width: 1150px) {
		.forecastGrid {
			grid-template-columns: repeat(3, 1fr);
			grid-template-areas:
				"boxer1 prono boxer2"
				"action action action";
		}
	}
</style>
