---
import PrincipalDate from "@/sections/PrincipalDate.astro"
import ProjectBigImage from "@/components/ProjectBigImage.astro"
import ProjectWorkout from "@/components/ProjectWorkout.astro"
import ProjectTestimonials from "@/components/ProjectTestimonials.astro"
import ProjectDetailInfo from "@/components/ProjectDetailInfo.astro"
import ProjectDetailInfoRival from "@/components/ProjectDetailInfoRival.astro"
import ProjectSocialLink from "@/components/ProjectSocialLink.astro"
import SectionTitle from "@/components/SectionTitle.astro"

import YouTube from "@/icons/youtube.astro"

// import { COUNTRIES } from "@/consts/countries" // value={COUNTRIES[boxer.country].name}
import { PROJECTS, type Project } from "@/consts/projects"
import { COMBATS } from "@/consts/combats"
import { FORECASTS } from "@/consts/forecasts"
import Layout from "@/layouts/Layout.astro"
import Forecasts, { type ProjectWithForecast } from "@/sections/Forecasts.astro"

// import CombatSection from "@/sections/Combat.astro"

export function getStaticPaths() {
	return PROJECTS.map(({ id }) => {
		return { params: { id } }
	})
}

const { id } = Astro.params

const [boxer] = PROJECTS.filter((boxer) => boxer.id === id)

const combat = COMBATS.find((combat) => combat.projects.includes(id))

if (!combat) {
	return new Response(JSON.stringify("Combat not found"), { status: 404 })
}

const projects = PROJECTS.filter((boxer) => combat.projects.includes(boxer.id))

if (!projects) {
	return new Response(JSON.stringify("Apartment house not found"), { status: 404 })
}

const forecast = FORECASTS.find((forecast) => forecast.combatId === combat.id)

const projectsWithForecast: ProjectWithForecast[] = []
let forecastCount = 0

let rivals: Project[] = []
if (typeof boxer.versus === "object") {
	for (const vs of boxer.versus) {
		rivals = rivals.concat(PROJECTS.filter((rival: Project) => rival.id === vs))
	}
} else {
	rivals = PROJECTS.filter((rival: Project) => rival.id === boxer.versus)
}

if (forecast) {
	forecast.forecastData.forEach((forecastData) => {
		const boxer = projects.find((boxer) => boxer.id === forecastData.boxerId)
		if (boxer) {
			projectsWithForecast.push({ ...boxer, forecast: forecastData.forecast })
			forecastCount += forecastData.predictionsCount
		}
	})
}
---

<Layout
	description={`Información del luchador ${boxer.name}`}
	title={`${boxer.name} - Información del boxeador de Constructora Colombia`}
>
	<main>
		<section class="flex flex-col items-center justify-center">
			<div class="flex flex-col items-center md:flex-row md:gap-10 lg:items-start">
				<div class="order-2 flex w-full flex-col md:order-1 md:w-auto md:gap-y-20 lg:w-1/4">
					<ProjectDetailInfo title="Nombre del proyecto" value={boxer.name} />
					<ProjectDetailInfo title="Ubicación" value={boxer.address} />
					<ProjectDetailInfo title="Localidad" value={boxer.locality} />
					<ProjectDetailInfo title="Antiguedad" value={`${boxer.age} años`} />
					<div class="hidden md:block">
						<ProjectDetailInfoRival title="Precio" value={rivals} />
					</div>
				</div>

				<div
					class="relative order-1 -mt-20 flex flex-col items-center justify-center md:order-2 lg:mx-4 lg:w-[800px]"
				>
					<ProjectBigImage id={id} name={boxer.name} address={boxer.address} />
				</div>

				<div class="order-3 flex w-full flex-col md:w-auto md:gap-y-20 lg:w-1/4">
					<ProjectDetailInfo title="Área Construida" value={`${boxer.builtArea} m2.`} />
					<ProjectDetailInfo title="Área Privada" value={`${boxer.privateArea} m2.`} />
					<ProjectDetailInfo title="Alcobas" value={boxer.bedrooms} />
					<ProjectDetailInfo title="Baños" value={boxer.toilets} />
					<div class="block md:hidden">
						<ProjectDetailInfoRival title="Rival/es" value={rivals} />
					</div>
				</div>
			</div>

			<div class="mt-20 flex flex-row flex-wrap justify-center gap-8">
				<ProjectSocialLink href={boxer.socials.youtube}>
					<YouTube />
				</ProjectSocialLink>
			</div>
		</section>

		<section>
			<PrincipalDate />
		</section>

		{
			boxer.workout && (
				<section class="my-44">
					<SectionTitle
						title="Avance de obra"
						description="Revisa la etapa en que se encuentra el proyecto y el avance de obra de tu vivienda"
					/>

					<ProjectWorkout workout={boxer.workout} />
				</section>
			)
		}
		{
			boxer.testimonials && boxer.testimonials.length > 0 && (
				<section class="my-44">
					<SectionTitle
						title="Testimonios"
						description="Descubre como ha sido la experiencia de nuestros clientes"
					/>

					<ProjectTestimonials testimonials={boxer.testimonials} />
				</section>
			)
		}
		{
			forecast && (
				<Forecasts combatNumber={combat.id} count={forecastCount} projects={projectsWithForecast} />
			)
		}
		<!-- <CombatSection combatNumber={combat.id} projects={projects} /> -->
	</main>
</Layout>

<script></script>
